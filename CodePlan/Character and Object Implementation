Character and Object Implementation

Class heirarchy:
	1st level: 	GameObject class
				MainGame class
	2nd level: 	MovingObject class inherits from GameObject
	3rd level: 	Character class inherits from MovingObject
				Attack class inherits from MovingObject
				HatObject class inherits from MovingObject
	4th level:	Player class inherits from Character
				Enemy class inherits from Character

Class descriptions:

	GameObject class: Establishes where on the map the object is going to be and draw it. It will also be where the external is read in and its information correctly parsed, stored, and returned for use. 

	MainGame class: Will contain all the logic for running the game, including all game states that will be used and how to get to them. 

	MovingObject class: Will define the abstract move() method for child classes. Will also establich total lives, life points per life, attack types, and if the attack is currently active. 

	Character class: Will define directions characters are capable of moving. Also intersections and how to deal 

	Attack class: Will check what type of character/hat is calling the method and give an attack based on that character/hat. Will check if active

	Hat class: (?) Not sure yet. Hat stuff

	Player class: More specific behavior functions

	Enemy class: Ditto